{"version":3,"sources":["Movies.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kSAgCeA,MA5Bf,YAAoD,IAAnCC,EAAkC,EAAlCA,KAAKC,EAA6B,EAA7BA,MAAMC,EAAuB,EAAvBA,QAAQC,EAAe,EAAfA,OAAOC,EAAQ,EAARA,OACvC,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,eAAd,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,aAD2B,CAC3B,MAAgBL,UAAU,gBAA1B,SACKI,GADIC,QAKjB,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,gBCqCDC,G,kNA3CXC,MAAQ,CACJC,WAAY,EACZC,OAAS,I,EAEbC,U,sBAAY,8BAAAC,EAAA,sEAKEC,IAAMC,IACZ,4DANI,gBAGQJ,EAHR,EAEJK,KACIA,KAAQL,OAKhB,EAAKM,SAAS,CAAEN,SAAQD,WAAY,IAR5B,2C,8FAUZ,sBAAAG,EAAA,sDACIK,KAAKN,YADT,gD,0EAGA,WACI,MAA6BM,KAAKT,MAA1BC,EAAR,EAAQA,UAAUC,EAAlB,EAAkBA,OAClB,OACA,yBAASV,UAAY,YAArB,SACMS,EACD,qBAAKT,UAAU,SAAf,SACG,sBAAMA,UAAU,eAAhB,yBAEFU,EAAOP,KAAK,SAAAe,GAAK,OACf,qBAAKlB,UAAU,SAAf,SACI,cAAC,EAAD,CAEImB,GAAID,EAAMC,GACVxB,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAME,mBACdrB,OAAQmB,EAAMnB,QANTmB,EAAMC,e,GApCjBE,IAAMC,YCAxBC,IAASC,OAAQ,cAAE,EAAF,IAAYC,SAASC,eAAe,W","file":"static/js/main.47f34041.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie ({year,title,summary,poster,genres}){\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title}/>\r\n            <div className=\"movie__data\">\r\n                <h3 className=\"movie__title\">{title}</h3>\r\n                <h5 className=\"movie__year\">{year}</h5>\r\n                <ul className=\"move__genres\">\r\n                    {genres.map((genre, index) => (//map은 무조건 key가 필요함. 그리고 자동으로 index를 매겨줌\r\n                        <li key={index} className=\"genres__genre\">{/*그래서 그걸 key로 사용*/}\r\n                            {genre}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>{/* p는 단락태그 */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movies\";\nimport \"./App.css\";\nclass App extends React.Component{\n    //constructor(){} App class가 호출되면 바로 호출 (생성자) --render 전  \n    //componentDidMount(){} component가 처음 render 할때 호출--render 후\n    //componentDidUpdate(){} component가 update된 후 호출--render 함수 안에 무언가 바뀌면 호출\n    //componentWillUnmount(){} component가 떠날 때 호출\n    //setState : state를 refresh하고 render을 refresh해주는 함수, \n    //current : this.state.count라고 명시해도 되지만, 외부 state에 의존하지 않기 위해서 (??) current 함수를 사용하는게 훨씬 더 효율적임.\n    //className이라고 하는 이유 : css파일은 상관 없는데 javascript class를 쓰고 있으니까 웹페이지가 혼동함. 그래서 자바안에 class는 전부 className으로 수정 \n    state = {//state를 쓰려면 App을 class로 선언.\n        isLoading : true,\n        movies : []\n    }\n    getMovies = async () => {//async -> 이 함수는 비동기, =\"너는 이 함수를 기다려야 해\" axios는 느리기때문에..        \n        const { // = movies.data.data.movies 를 es6 로 나타낸것\n            data: {\n                data: { movies }\n            }\n        } = await axios.get(//그래서 async 안에 뭘기다려? await 이후에 나오는걸! axios가 끝날때까지 기다렸다가 계속해\n            \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n            );\n        this.setState({ movies, isLoading : false });//= this.setState({movies:movies})\n    }\n    async componentDidMount() {//mount이후\n        this.getMovies();\n    }\n    render() {\n        const { isLoading,movies } = this.state;\n        return (\n        <section className = \"container\">\n            { isLoading ?\n            (<div className=\"loader\">\n                <span className=\"loader__text\">Loading..</span>\n            </div>)\n            : movies.map( movie => (\n                <div className=\"movies\">\n                    <Movie \n                        key={movie.id}\n                        id={movie.id} \n                        year={movie.year} \n                        title={movie.title} \n                        summary={movie.summary} \n                        poster={movie.medium_cover_image}\n                        genres={movie.genres}\n                    />\n                </div>\n        ))}\n        </section>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\n\nReactDOM.render( < App / > , document.getElementById(\"root\"));"],"sourceRoot":""}